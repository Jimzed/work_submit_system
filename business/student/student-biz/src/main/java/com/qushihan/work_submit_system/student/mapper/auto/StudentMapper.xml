<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qushihan.work_submit_system.student.mapper.auto.StudentMapper">
  <resultMap id="BaseResultMap" type="com.qushihan.work_submit_system.student.model.auto.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="student_number" jdbcType="BIGINT" property="studentNumber" />
    <result column="student_password" jdbcType="VARCHAR" property="studentPassword" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="clazz_id" jdbcType="BIGINT" property="clazzId" />
    <result column="isdel" jdbcType="BIT" property="isdel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, student_number, student_password, student_name, clazz_id, isdel, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.qushihan.work_submit_system.student.model.auto.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_submit_system.student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work_submit_system.student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from work_submit_system.student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qushihan.work_submit_system.student.model.auto.StudentExample">
    delete from work_submit_system.student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qushihan.work_submit_system.student.model.auto.Student">
    insert into work_submit_system.student (id, student_id, student_number, 
      student_password, student_name, clazz_id, 
      isdel, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{studentNumber,jdbcType=BIGINT}, 
      #{studentPassword,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{clazzId,jdbcType=BIGINT}, 
      #{isdel,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qushihan.work_submit_system.student.model.auto.Student">
    insert into work_submit_system.student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentNumber != null">
        student_number,
      </if>
      <if test="studentPassword != null">
        student_password,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="clazzId != null">
        clazz_id,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentNumber != null">
        #{studentNumber,jdbcType=BIGINT},
      </if>
      <if test="studentPassword != null">
        #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="clazzId != null">
        #{clazzId,jdbcType=BIGINT},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qushihan.work_submit_system.student.model.auto.StudentExample" resultType="java.lang.Long">
    select count(*) from work_submit_system.student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work_submit_system.student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.studentNumber != null">
        student_number = #{record.studentNumber,jdbcType=BIGINT},
      </if>
      <if test="record.studentPassword != null">
        student_password = #{record.studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.clazzId != null">
        clazz_id = #{record.clazzId,jdbcType=BIGINT},
      </if>
      <if test="record.isdel != null">
        isdel = #{record.isdel,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work_submit_system.student
    set id = #{record.id,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      student_number = #{record.studentNumber,jdbcType=BIGINT},
      student_password = #{record.studentPassword,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      clazz_id = #{record.clazzId,jdbcType=BIGINT},
      isdel = #{record.isdel,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qushihan.work_submit_system.student.model.auto.Student">
    update work_submit_system.student
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentNumber != null">
        student_number = #{studentNumber,jdbcType=BIGINT},
      </if>
      <if test="studentPassword != null">
        student_password = #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="clazzId != null">
        clazz_id = #{clazzId,jdbcType=BIGINT},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qushihan.work_submit_system.student.model.auto.Student">
    update work_submit_system.student
    set student_id = #{studentId,jdbcType=BIGINT},
      student_number = #{studentNumber,jdbcType=BIGINT},
      student_password = #{studentPassword,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      clazz_id = #{clazzId,jdbcType=BIGINT},
      isdel = #{isdel,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>